{"version":3,"file":"content.bundle.js","mappings":"AAqBAA,OAAOC,QAAQC,UAAUC,aAAY,SAACC,EAASC,EAAQC,GAEnD,IAtBIC,EACAC,EAoBiB,kBAAnBJ,EAAQK,QAEVH,EAAa,CAAEI,YAvBXH,EAAkBI,SAASC,iBAAiB,mCAC5CJ,EAAkB,GAExBD,EAAgBM,SAAQ,SAACC,GACvB,IAAMC,EAAmBD,EAAKE,cAAc,sBACtCC,EAAcH,EAAKE,cAAc,iBAEjCE,EAAYH,EAAmBA,EAAiBI,UAAUC,OAAS,GACnEC,EAAQJ,EAAcA,EAAYE,UAAUC,OAAS,GAEvDF,GAAaG,GACfb,EAAgBc,KAAK,IAADC,OAAKL,EAAS,MAAAK,OAAKF,GAE3C,IAGOb,EAAgBgB,KAAK,QAS9B","sources":["webpack:///./content.js"],"sourcesContent":["function extractTranscript() {\n  const transcriptLines = document.querySelectorAll('ytd-transcript-segment-renderer');\n  const transcriptArray = [];\n\n  transcriptLines.forEach((line) => {\n    const timestampElement = line.querySelector('.segment-timestamp');\n    const textElement = line.querySelector('.segment-text');\n\n    const timestamp = timestampElement ? timestampElement.innerText.trim() : '';\n    const words = textElement ? textElement.innerText.trim() : '';\n\n    if (timestamp && words) {\n      transcriptArray.push(`[${timestamp}] ${words}`);\n    }\n  });\n\n  // Join the array into a single block of text with newlines\n  return transcriptArray.join('\\n');\n}\n\n// Listen for messages from the popup to send the transcript\nchrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\n  if (request.action === \"getTranscript\") {\n    const transcript = extractTranscript();\n    sendResponse({ transcript });\n  }\n});"],"names":["chrome","runtime","onMessage","addListener","request","sender","sendResponse","transcriptLines","transcriptArray","action","transcript","document","querySelectorAll","forEach","line","timestampElement","querySelector","textElement","timestamp","innerText","trim","words","push","concat","join"],"sourceRoot":""}